(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{52:function(e,t,v){"use strict";v.r(t);var _=v(0),a=Object(_.a)({},function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"配置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#配置","aria-hidden":"true"}},[e._v("#")]),e._v(" 配置")]),e._v(" "),v("h3",{attrs:{id:"type"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#type","aria-hidden":"true"}},[e._v("#")]),e._v(" type")]),e._v(" "),v("ul",[v("li",[v("strong",[e._v("类型:")]),e._v(" "),v("code",[e._v("string")])]),e._v(" "),v("li",[e._v("这是一个必需的选项")])]),e._v(" "),v("p",[e._v("容器的类型。举个例子，如果 "),v("code",[e._v("type")]),e._v(" 被设置为 "),v("code",[e._v("foo")]),e._v("，则仅有下面的语法会被解析为 markdown 容器：")]),e._v(" "),v("div",{staticClass:"language-md extra-class"},[v("pre",{pre:!0,attrs:{class:"language-md"}},[v("code",[e._v("::: foo bar\n随便写点啥 ~\n:::\n")])])]),v("h3",{attrs:{id:"defaulttitle"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#defaulttitle","aria-hidden":"true"}},[e._v("#")]),e._v(" defaultTitle")]),e._v(" "),v("ul",[v("li",[v("strong",[e._v("类型:")]),e._v(" "),v("code",[e._v("string")])]),e._v(" "),v("li",[v("strong",[e._v("默认值:")]),e._v(" "),v("code",[e._v("type")]),e._v(" 的大写形式")])]),e._v(" "),v("p",[e._v("容器的默认标题。如果没有提供标题，则会使用 "),v("code",[e._v("defaultTitle")]),e._v(" 作为容器的标题。")]),e._v(" "),v("h3",{attrs:{id:"before"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#before","aria-hidden":"true"}},[e._v("#")]),e._v(" before")]),e._v(" "),v("ul",[v("li",[v("strong",[e._v("类型:")]),e._v(" "),v("code",[e._v("string | Function")])]),e._v(" "),v("li",[v("strong",[e._v("默认值:")]),e._v(" "),v("code",[e._v("undefined")])])]),e._v(" "),v("p",[e._v("要插入在容器前的 HTML。如果设置为一个函数，将传入当前的 "),v("code",[e._v("info")]),e._v(" 作为第一个参数。（在上面的例子中，"),v("code",[e._v("info")]),e._v(" 的值为 "),v("code",[e._v("bar")]),e._v("。）如果设置了这个值，它将覆盖 "),v("code",[e._v("defaultTitle")]),e._v(" 的效果。")]),e._v(" "),v("h3",{attrs:{id:"after"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#after","aria-hidden":"true"}},[e._v("#")]),e._v(" after")]),e._v(" "),v("ul",[v("li",[v("strong",[e._v("类型:")]),e._v(" "),v("code",[e._v("string | Function")])]),e._v(" "),v("li",[v("strong",[e._v("默认值:")]),e._v(" "),v("code",[e._v("undefined")])])]),e._v(" "),v("p",[e._v("要插入在容器后的 HTML。如果设置为一个函数，将传入当前的 "),v("code",[e._v("info")]),e._v(" 作为第一个参数。（在上面的例子中，"),v("code",[e._v("info")]),e._v(" 的值为 "),v("code",[e._v("bar")]),e._v("。）如果设置了这个值，它将覆盖 "),v("code",[e._v("defaultTitle")]),e._v(" 的效果。")]),e._v(" "),v("h3",{attrs:{id:"validate"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#validate","aria-hidden":"true"}},[e._v("#")]),e._v(" validate")]),e._v(" "),v("ul",[v("li",[v("strong",[e._v("类型:")]),e._v(" "),v("code",[e._v("Function")])]),e._v(" "),v("li",[v("strong",[e._v("默认值:")]),e._v(" "),v("code",[e._v("undefined")])])]),e._v(" "),v("p",[e._v("一个用于判定容器是否结束的函数。当认定容器范围结束时应返回一个 "),v("code",[e._v("true")]),e._v("。")]),e._v(" "),v("h3",{attrs:{id:"render"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#render","aria-hidden":"true"}},[e._v("#")]),e._v(" render")]),e._v(" "),v("ul",[v("li",[v("strong",[e._v("类型:")]),e._v(" "),v("code",[e._v("Function")])]),e._v(" "),v("li",[v("strong",[e._v("默认值:")]),e._v(" "),v("code",[e._v("undefined")])])]),e._v(" "),v("p",[e._v("容器开头和结束 token 的渲染函数。如果设置了这个值，它将覆盖 "),v("code",[e._v("before")]),e._v(", "),v("code",[e._v("after")]),e._v(" 和 "),v("code",[e._v("defaultTitle")]),e._v(" 的效果。")]),e._v(" "),v("h3",{attrs:{id:"marker"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#marker","aria-hidden":"true"}},[e._v("#")]),e._v(" marker")]),e._v(" "),v("ul",[v("li",[v("strong",[e._v("类型:")]),e._v(" "),v("code",[e._v("string")])]),e._v(" "),v("li",[v("strong",[e._v("默认值:")]),e._v(" "),v("code",[e._v("':'")])])]),e._v(" "),v("p",[e._v("用于分隔符的字符。")])])},[],!1,null,null,null);t.default=a.exports}}]);